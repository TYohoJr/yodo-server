{"version":3,"sources":["Home/HomePage.js","Components/UserAccount.js","Components/SignUpModal.js","Components/LogInDropdown.js","Components/LogOutDropdown.js","reducers.js","Components/NavigationBar.js","CurrentPage.js","Calculators/CalculatorsPage.js","About/AboutPage.js","Support/SupportPage.js","Components/PageTabs.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","Component","connect","state","UserAccount","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","dropdownOpen","username","setState","userDataReducer","data","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","id","right","DropdownItem","divider","React","SignUpModal","signUpUser","onCreatePassword1Change","onCreatePassword2Change","onCreateUsernameChange","onShowPasswordChange","modal","alert","dispatch","type","prevState","_this2","account","createAccountReducer","createPassword1","createPassword2","length","createUsername","axios","post","password","dateCreated","Date","toLocaleString","then","result","message","e","target","value","showPassword","passwordMatchCheck","Button","onClick","Modal","isOpen","className","ModalHeader","ModalBody","Input","onChange","style","color","concat","ModalFooter","LogInDropdown","logInUser","onLogInPasswordChange","onLogInUsernameChange","logInReducer","logInUsername","logInPassword","localStorage","setItem","token","setTimeout","placeholder","Components_SignUpModal","combineReducers","currentPageReducer","action","currentPage","Home_HomePage","objectSpread","userAccount","statusDropdown","Components_LogInDropdown","Components_UserAccount","LogOutDropdown","changePasswordReducer","oldPassword","newPassword1","newPassword2","NavigationBar","clear","Navbar","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","CurrentPage","CalculatorsPage","AboutPage","SupportPage","PageTabs","changePage","page","Container","Row","Col","xs","Calculators_CalculatorsPage","About_AboutPage","Support_SupportPage","store","createStore","reducer","App","es","Components_NavigationBar","Components_PageTabs","src_CurrentPage","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da9a00f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n                Home Page Content\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(HomePage);","import React from 'react';\nimport './Components.css';\nimport { DropdownToggle, DropdownMenu, DropdownItem, UncontrolledDropdown } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass UserAccount extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      username: 'Loading..'\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  componentWillMount() {\n      debugger\n      if (this.props.userDataReducer.data) {\n          this.setState({\n              username: this.props.userDataReducer.data.username\n          })\n      }\n  }\n\n  render() {\n    return (\n        <UncontrolledDropdown nav inNavbar>\n        <DropdownToggle nav caret>\n            {this.state.username}\n        </DropdownToggle>\n        <DropdownMenu id='dropdown-menu' right>\n            {/* <Input className='dropdown-content' value={this.props.logInReducer.logInUsername} onChange={this.onLogInUsernameChange} placeholder='Username' />\n            <Input className='dropdown-content' type='password' value={this.props.logInReducer.logInPassword} onChange={this.onLogInPasswordChange} placeholder='Password' />\n            <Button className='dropdown-content' color='success' onClick={this.logInUser}>Log In</Button> */}\n            <DropdownItem divider />\n            {/* <SignUpModal /> */}\n        </DropdownMenu>\n    </UncontrolledDropdown>\n    );\n  }\n}\n\nexport default connect((state) => (state))(UserAccount);","import React from 'react';\nimport './Components.css';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nclass SignUpModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.signUpUser = this.signUpUser.bind(this);\n        this.toggle = this.toggle.bind(this);\n        this.onCreatePassword1Change = this.onCreatePassword1Change.bind(this);\n        this.onCreatePassword2Change = this.onCreatePassword2Change.bind(this);\n        this.onCreateUsernameChange = this.onCreateUsernameChange.bind(this);\n        this.onShowPasswordChange = this.onShowPasswordChange.bind(this);\n        this.state = {\n            modal: false\n        };\n    }\n\n    toggle() {\n        if (this.props.userDataReducer.data) {\n            return alert('Please log out before creating a new account')\n        }\n        if (this.state.modal === false) {\n            this.props.dispatch({\n                type: \"resetCreateAccount\",\n            })\n        }\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    signUpUser() {\n        let account = this.props.createAccountReducer\n        if (account.createPassword1 !== account.createPassword2) {\n            return alert(\"Passwords must match\");\n        } else if (!account.createPassword1) {\n            return alert(\"Password can't be blank\");\n        } else if (account.createPassword1.length < 6) {\n            return alert(\"Password must be at least 6 characters long\");\n        } else if (!account.createUsername) {\n            return alert(\"Username can't be blank\");\n        }\n        axios.post(\"/signUpData\", { username: account.createUsername, password: account.createPassword1, dateCreated: new Date().toLocaleString(),}).then((result) => {\n            if (result.data.message === \"Sign Up Successful!\") {\n                alert(result.data.message);\n                this.toggle();\n            } else {\n                alert(result.data.message);\n            }\n        })\n    }\n\n    onCreatePassword1Change(e) {\n        this.props.dispatch({\n            type: \"changeCreatePassword1\",\n            createPassword1: e.target.value\n        })\n    }\n\n    onCreatePassword2Change(e) {\n        this.props.dispatch({\n            type: \"changeCreatePassword2\",\n            createPassword2: e.target.value\n        })\n    }\n\n    onCreateUsernameChange(e) {\n        this.props.dispatch({\n            type: \"changeCreateUsername\",\n            createUsername: e.target.value\n        })\n    }\n\n    onShowPasswordChange() {\n        if (this.props.createAccountReducer.showPassword === \"password\") {\n            this.props.dispatch({\n                type: \"changeShowPassword\",\n                showPassword: \"text\"\n            })\n        } else if (this.props.createAccountReducer.showPassword === \"text\") {\n            this.props.dispatch({\n                type: \"changeShowPassword\",\n                showPassword: \"password\"\n            })\n        }\n    }\n\n    render() {\n        var passwordMatchCheck = \"Red\";\n        if (this.props.createAccountReducer.createPassword1 === this.props.createAccountReducer.createPassword2) {\n            passwordMatchCheck = \"Black\";\n        }\n        return (\n            <div>\n                <Button onClick={this.toggle}>Create Account</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Create Account</ModalHeader>\n                    <ModalBody>\n                        <div>\n                            <p>Username</p>\n                            <Input type=\"text\" value={this.props.createAccountReducer.createUsername} onChange={this.onCreateUsernameChange} />\n                            <p>Password</p>\n                            <Input type={this.props.createAccountReducer.showPassword} value={this.props.createAccountReducer.createPassword1} onChange={this.onCreatePassword1Change} />\n                            <small id=\"password-requirements\">\n                                <ul>\n                                    <li>At least 6 characters</li>\n                                    <li>At least one capital letter</li>\n                                </ul>\n                            </small>\n                            <span>Re-Type Password</span>\n                            <Input style={{\n                                \"color\": `${passwordMatchCheck}`\n                            }} type={this.props.createAccountReducer.showPassword} value={this.props.createAccountReducer.createPassword2} onChange={this.onCreatePassword2Change} />\n                            <small><input type=\"checkbox\" onChange={this.onShowPasswordChange} />Show Password</small>\n                        </div>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={this.signUpUser}>Create Account</Button>{' '}\n                        <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(SignUpModal);","import React, { Component } from 'react';\nimport './Components.css';\nimport { connect } from 'react-redux';\nimport {\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Input,\n    Button,\n} from 'reactstrap';\nimport SignUpModal from './SignUpModal';\nimport axios from 'axios';\n\nclass LogInDropdown extends Component {\n    constructor() {\n        super();\n        this.logInUser = this.logInUser.bind(this);\n        this.onLogInPasswordChange = this.onLogInPasswordChange.bind(this);\n        this.onLogInUsernameChange = this.onLogInUsernameChange.bind(this);\n        this.onShowPasswordChange = this.onShowPasswordChange.bind(this);\n    }\n\n    logInUser() {\n        if (this.props.userDataReducer.username) {\n            return alert('You are already logged in. If you would like to use a different account, please log out and then back in.')\n        }\n        axios.post(\"/userLogIn\", { username: this.props.logInReducer.logInUsername, password: this.props.logInReducer.logInPassword }).then((result) => {\n            if (result.data.message === \"Login successful!\") {\n                localStorage.setItem('token', result.data.token);\n                this.props.dispatch({\n                    type: 'userLogIn',\n                    data: result.data\n                });\n                setTimeout(() => {\n                    this.props.dispatch({\n                        type: \"changeLogInStatus\",\n                    });\n                }, 2000)\n            } else {\n                return alert(result.data.message);\n            }\n        })\n    }\n\n    onLogInPasswordChange(e) {\n        this.props.dispatch({\n            type: \"changeLogInPassword\",\n            logInPassword: e.target.value\n        })\n    }\n\n    onLogInUsernameChange(e) {\n        this.props.dispatch({\n            type: \"changeLogInUsername\",\n            logInUsername: e.target.value\n        })\n    }\n\n    onShowPasswordChange() {\n        if (this.props.logInReducer.showPassword === \"password\") {\n            this.props.dispatch({\n                type: \"changeLogInShowPassword\",\n                showPassword: \"text\"\n            })\n        } else if (this.props.logInReducer.showPassword === \"text\") {\n            this.props.dispatch({\n                type: \"changeLogInShowPassword\",\n                showPassword: \"password\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                    Log In\n                </DropdownToggle>\n                <DropdownMenu id='dropdown-menu' right>\n                    <Input className='dropdown-content' value={this.props.logInReducer.logInUsername} onChange={this.onLogInUsernameChange} placeholder='Username' />\n                    <Input className='dropdown-content' type='password' value={this.props.logInReducer.logInPassword} onChange={this.onLogInPasswordChange} placeholder='Password' />\n                    <Button className='dropdown-content' color='success' onClick={this.logInUser}>Log In</Button>\n                    <DropdownItem divider />\n                    <SignUpModal />\n                </DropdownMenu>\n            </UncontrolledDropdown>\n        )\n    }\n}\n\nexport default connect((state) => (state))(LogInDropdown);","import React, { Component } from 'react';\nimport './Components.css';\nimport { connect } from 'react-redux';\nimport {\n    // Collapse,\n    // Navbar,\n    // NavbarToggler,\n    // NavbarBrand,\n    // Nav,\n    // UncontrolledDropdown,\n    // DropdownToggle,\n    // DropdownMenu,\n    // DropdownItem,\n    // Input,\n    Button,\n} from 'reactstrap';\n\nclass LogInDropdown extends Component {\n    render() {\n        return (\n            <Button color='danger' id='log-out-button'>Log Out</Button>\n            // <UncontrolledDropdown nav inNavbar>\n            //     <DropdownToggle nav caret>\n            //         Log Out\n            //     </DropdownToggle>\n            //     <DropdownMenu id='dropdown-menu' right>\n            //         <Input className='dropdown-content' value={this.props.logInReducer.logInUsername} onChange={this.onLogInUsernameChange} placeholder='Username' />\n            //         <Input className='dropdown-content' type='password' value={this.props.logInReducer.logInPassword} onChange={this.onLogInPasswordChange} placeholder='Password' />\n            //         <Button className='dropdown-content' color='success' onClick={this.logInUser}>Log In</Button>\n            //         <DropdownItem divider />\n            //         <SignUpModal />\n            //     </DropdownMenu>\n            // </UncontrolledDropdown>\n        )\n    }\n}\n\nexport default connect((state) => (state))(LogInDropdown);","import React from 'react';\nimport { combineReducers } from 'redux';\nimport HomePage from './Home/HomePage';\nimport UserAccount from './Components/UserAccount';\nimport LogInDropdown from './Components/LogInDropdown';\nimport LogOutDropdown from './Components/LogOutDropdown';\n\nconst userDataReducer = (state, action) => {\n    if (!state) {\n        state = {\n            data: null\n        }\n    }\n    switch (action.type) {\n        case 'userLogIn':\n            return state = {\n                ...state,\n                data: action.data\n            }\n        case 'logOutUser':\n            return state = {\n                data: null\n            }\n        default:\n            return state = {\n                ...state\n            }\n    }\n}\n\nconst currentPageReducer = (state, action) => {\n    if (!state) {\n        state = {\n            currentPage: <HomePage />\n        }\n    }\n    switch (action.type) {\n        case 'changePage':\n            return state = {\n                ...state,\n                currentPage: action.currentPage\n            }\n        default:\n            return state = {\n                ...state\n            }\n    }\n}\n\nconst logInReducer = (state, action) => {\n    if (!state) {\n        state = {\n            logInUsername: \"\",\n            logInPassword: \"\",\n            showPassword: \"password\",\n            userAccount: null,\n            statusDropdown: <LogInDropdown />\n        }\n    }\n    switch (action.type) {\n        case \"changeLogInStatus\":\n            return state = {\n                ...state,\n                userAccount: <UserAccount />,\n                statusDropdown: <LogOutDropdown />\n            }\n        case \"changeLogInUsername\":\n            return state = {\n                ...state,\n                logInUsername: action.logInUsername\n            }\n        case \"changeLogInPassword\":\n            return state = {\n                ...state,\n                logInPassword: action.logInPassword\n            }\n        case \"changeLogInShowPassword\":\n            return state = {\n                ...state,\n                showPassword: action.showPassword\n            }\n        case \"resetLogInData\":\n            return state = {\n                logInUsername: \"\",\n                logInPassword: \"\",\n                showPassword: \"password\",\n            }\n        default:\n            return state = {\n                ...state,\n            }\n    }\n}\n\nconst changePasswordReducer = (state, action) => {\n    if (!state) {\n        state = {\n            oldPassword: \"\",\n            newPassword1: \"\",\n            newPassword2: \"\",\n            showPassword: \"password\"\n        }\n    }\n    switch (action.type) {\n        case \"changeOldPassword\":\n            return state = {\n                ...state,\n                oldPassword: action.oldPassword\n            }\n        case \"changeNewPassword1\":\n            return state = {\n                ...state,\n                newPassword1: action.newPassword1\n            }\n        case \"changeNewPassword2\":\n            return state = {\n                ...state,\n                newPassword2: action.newPassword2\n            }\n        case \"changeShowPassword\":\n            return state = {\n                ...state,\n                showPassword: action.showPassword\n            }\n        case \"resetChangePassword\":\n            return state = {\n                oldPassword: \"\",\n                newPassword1: \"\",\n                newPassword2: \"\",\n                showPassword: \"password\",\n            }\n        default:\n            return state = {\n                ...state,\n            }\n    }\n}\n\nconst createAccountReducer = (state, action) => {\n    if (!state) {\n        state = {\n            createUsername: \"\",\n            createPassword1: \"\",\n            createPassword2: \"\",\n            showPassword: \"password\"\n        }\n    }\n    switch (action.type) {\n        case \"changeCreateUsername\":\n            return state = {\n                ...state,\n                createUsername: action.createUsername\n            }\n        case \"changeCreatePassword1\":\n            return state = {\n                ...state,\n                createPassword1: action.createPassword1\n            }\n        case \"changeCreatePassword2\":\n            return state = {\n                ...state,\n                createPassword2: action.createPassword2\n            }\n        case \"changeShowPassword\":\n            return state = {\n                ...state,\n                showPassword: action.showPassword\n            }\n        case \"resetCreateAccount\":\n            return state = {\n                createUsername: \"\",\n                createPassword1: \"\",\n                createPassword2: \"\",\n                showPassword: \"password\",\n            }\n        default:\n            return state = {\n                ...state,\n            }\n    }\n}\n\nexport default combineReducers({\n    currentPageReducer,\n    logInReducer,\n    changePasswordReducer,\n    createAccountReducer,\n    userDataReducer,\n});","import React from 'react';\nimport './Components.css';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass NavigationBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n        };\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    componentWillUnmount() {\n        localStorage.clear();\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar color=\"dark\" dark expand=\"md\">\n                    <NavbarBrand href=\"/\">YoDo</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            {this.props.logInReducer.userAccount}\n                            {this.props.logInReducer.statusDropdown}\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(NavigationBar);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CurrentPage extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.currentPageReducer.currentPage}\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(CurrentPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CalculatorsPage extends Component {\n    render() {\n        return (\n            <div>\n                Calculators Page Content\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(CalculatorsPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass AboutPage extends Component {\n    render() {\n        return (\n            <div>\n                About Page Content\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(AboutPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass SupportPage extends Component {\n    render() {\n        return (\n            <div>\n                Support Page Content\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(SupportPage);","import React, { Component } from 'react';\nimport './Components.css';\nimport {\n    Container,\n    Row,\n    Col,\n    Button,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport HomePage from '../Home/HomePage';\nimport CalculatorsPage from '../Calculators/CalculatorsPage';\nimport AboutPage from '../About/AboutPage';\nimport SupportPage from '../Support/SupportPage';\n\nclass PageTabs extends Component {\n    constructor() {\n        super();\n        this.changePage = this.changePage.bind(this);\n    }\n\n    changePage(page) {\n        this.props.dispatch({\n            type: 'changePage',\n        currentPage: page\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col xs='3'><Button onClick={() => this.changePage(<HomePage />)}>Home</Button></Col>\n                        <Col xs='3'><Button onClick={() => this.changePage(<CalculatorsPage />)}>Calculators</Button></Col>\n                        <Col xs='3'><Button onClick={() => this.changePage(<AboutPage />)}>About</Button></Col>\n                        <Col xs='3'><Button onClick={() => this.changePage(<SupportPage />)}>Support</Button></Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(PageTabs);","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\nimport NavigationBar from './Components/NavigationBar';\nimport CurrentPage from './CurrentPage';\nimport PageTabs from './Components/PageTabs';\n\nconst store = createStore(reducer);\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <NavigationBar />\n          <PageTabs />\n          <CurrentPage />\n        </div>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}